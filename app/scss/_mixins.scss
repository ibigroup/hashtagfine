/* Complementary Color Scheme */

$complement1: adjust-hue($base, 180);
$complement2: darken(adjust-hue($base, 180), 5%);
$lighten1: lighten($base, 15%);
$lighten2: lighten($base, 30%);
 
// .one   { background: $base; }
// .two   { background: $complement1; }
// .three { background: $complement2; }
// .four  { background: $lighten1; }
// .five  { background: $lighten2; }

/* Subtle Color Scheme */

$lighter1: lighten(adjust-hue($base, 5), 10%);
$lighter2: lighten(adjust-hue($base, 10), 20%);
$darker1: darken(adjust-hue($base, -5), 10%);
$darker2: darken(adjust-hue($base, -10), 20%);
 
/* Implementation */
.one   { background: $base; }
.two   { background: $lighter1; }
.three { background: $lighter2; }
.four  { background: $darker1; }
.five  { background: $darker2; }

@mixin breakpoint($point) {
  @if $point == 480 {
    @media (min-width: 480px) { @content; }
  }
  @else if $point == 768 {
    @media (min-width: 768px) { @content; }
  }
  @else if $point == 1140 {
    @media (min-width: 1140px)  { @content; }
  }
}

// .page-wrap {
//   width: 75%;
//   @include breakpoint(large) { width: 60%; }
//   @include breakpoint(medium) { width: 80%; }
//   @include breakpoint(small) { width: 95%; }
// }

@mixin vertically-center ($child: ".vcentered") {
  display: table;
  & > #{$child} {
    display: table-cell;
    vertical-align: middle;
  }
}

// retina images

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

// div.logo {
//    background: url("logo.png") no-repeat;
//    @include image-2x("logo2x.png", 100px, 25px);
//  }


@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// .article {
//      @include clearfix();
// }

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

// *,
// *:after,
// *:before {
//   @include box-sizing(border-box);
// }

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
     -webkit-border-top-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
     -webkit-border-top-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}

// .button {
//   @include border-radius(5px);
// }

// .submit-button {
//   @include border-top-radius(10px);
//   @include border-right-radius(8px);
//   @include border-bottom-radius(10px);
//   @include border-left-radius (6px);
// }

@mixin box-emboss($opacity, $opacity2){
    box-shadow:white($opacity) 0 1px 0, inset black($opacity2) 0 1px 0;
}

// .box{
//     @include box-emboss(0.8, 0.05);
// }

@mixin letterpress($opacity: 0.5){
    text-shadow:white($opacity) 0 1px 0;
}

@mixin box-shadow($horizontal: 0px, $vertical: 1px, $blur: 2px, $color: #CCC) {
  -webkit-box-shadow: $horizontal $vertical $blur $color;
  -moz-box-shadow: $horizontal $vertical $blur $color;
  box-shadow: $horizontal $vertical $blur $color;
}

@mixin inset-box-shadow($horizontal: 0px, $vertical: 1px, $blur: 2px, $color: #CCC) {
  -webkit-box-shadow: inset $horizontal $vertical $blur $color;
  -moz-box-shadow: inset $horizontal $vertical $blur $color;
  box-shadow: inset $horizontal $vertical $blur $color;
}

/* FONT FACE */
@mixin font-face( $name, $filename, $svg_id, $style:normal, $weight:normal ) {
	@font-face {
		font-family: "#{$name}";
		font-style: $style;
		font-weight: $weight;
		src: font-url( "#{$filename}.eot" );
		src: font-url( "#{$filename}.eot?#iefix" ) format( "embedded-opentype" ),
			 font-url( "#{$filename}.woff" ) format( "woff" ),
			 font-url( "#{$filename}.ttf" ) format( "truetype" ),
			 font-url( "#{$filename}.svg##{$svg_id}" ) format( "svg" );
	}
}

@mixin font-size($sizeValue: 12 ){
  font-size: $sizeValue + px; //fallback for old browsers
  font-size: (0.125 * $sizeValue) + rem;
}

// body {
//   @include font-size(16);
// }

@mixin line-height($heightValue: 12 ){
	line-height: $heightValue + px; //fallback for old browsers
	line-height: (0.125 * $heightValue) + rem;
}

// body {
//   @include line-height (16);
// }


/* TEXT SHADOW */
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
    text-shadow: $x $y $blur $color;
}

/* TRANSFORM  */
@mixin transform($params) {
    -webkit-transform: $params;
    -moz-transform:    $params;
    transform:         $params;
}

/* TRANSITION */
@mixin transition($what: all, $length: 1s, $easing: ease-in-out) {
    -moz-transition:    $what $length $easing;
    -o-transition:      $what $length $easing;
    -webkit-transition: $what $length $easing;
    -ms-transition:     $what $length $easing;
    transition:         $what $length $easing;

}


/* FLEX */
@mixin flex($value: 1) {
    -webkit-box-flex: $value;
    -moz-box-flex:    $value;
    box-flex:         $value;
}

/* FLIP */
@mixin flip($scaleX: -1) {
	-moz-transform:    scaleX($scaleX);
	-o-transform:      scaleX($scaleX);
	-webkit-transform: scaleX($scaleX);
	transform:         scaleX($scaleX);
	filter:            FlipH;
	-ms-filter:        "FlipH";
}
